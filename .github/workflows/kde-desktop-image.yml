name: "docker/kde-plasma"

env:
  # Registry namespaces, to avoid only-lowercase-supported errors
  GHCR_NAMESPACE: ajhalili2006
  RHQCR_NAMESPACE: ajhalili2006

  # Service account stuff for Quay.io
  RHQCR_BOT_ACCOUNT: ajhalili2006+gildedguy
  RHQCR_BOT_PASSWORD: ${{ secrets.RHQCR_SERVICE_ACCOUNT_API_KEY }}

  # GHCR
  GHCR_PAT: ${{ secrets.LTT_STORE_DOT_COM }}
  # may not work if forked in an org, use an bot account instead
  GHCR_USERNAME: ${{ github.repository_owner }}

  # Other stuff for Docker builds
  image_name: webtop-ubuntu-kde
  contextRot: src/kde-plasma
on:
  push:
    branches: [ main ]
    paths:
      - "src/kde-plasma/**/Dockerfile"
      - "src/kde-plasma/**/overlay/**"
  workflow_dispatch:
    inputs:
      codename:
        required: true
        description: Ubuntu release codename, only supports LTS releases available on ghcr.io/linuxserver/baseimage-ubuntu.
        default: focal

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint Dockerfile
        if: ${{ always() }}
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: "./${{env.contextRoot}}/ubuntu/Dockerfile"
  build-ubuntu:
     runs-on: ubuntu-latest
     needs: [ lint ]
     env:
       UBUNTU_LTS_CODENAME: ${{ github.event.inputs.codename || 'focal' }}
     steps:
      - uses: actions/checkout@v2
      - name: Login with GHCR
        uses: docker/login-action@v1
        with:
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_PAT }}
          registry: ghcr.io
      - name: Login with RHQCR
        uses: docker/login-action@v1
        with:
          username: ${{ env.RHQCR_BOT_ACCOUNT }}
          password: ${{ env.RHQCR_BOT_PASSWORD }}
          registry: quay.io
      - name: Generate matadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            ghcr.io/${{ env.GHCR_NAMESPACE }}/${{ env.image_name }}
            quay.io/${{ env.RHQCR_NAMESPACE }}/${{ env.image_name }}
          tags: |
            ${{ env.UBUNTU_LTS_CODENAME }}
          flavor: |
           latest=true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build da image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.context }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            UBUNTU_LTS_CODENAME=${{env.UBUNTU_LTS_CODENAME}}
